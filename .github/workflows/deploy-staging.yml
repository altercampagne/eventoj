name: Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy-staging:
    name: Deploy to staging
    runs-on: ubuntu-latest
    environment: staging

    services:
      database:
        image: postgres:16
        env:
          POSTGRES_DB: app
          POSTGRES_PASSWORD: app
          POSTGRES_USER: app
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      DATABASE_HOST: localhost

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo

      - name: Download dependencies
        uses: ramsey/composer-install@v2
        with:
          composer-options: "--optimize-autoloader"

      - name: Create database
        run: bin/reset-db

      - name: Install assets
        run: bin/console importmap:install

      - name: Build assets (SASS)
        run: bin/console sass:build

      - name: Compile asset map
        run: bin/console asset-map:compile

      - name: Create dump (data only) from database
        uses: addnab/docker-run-action@v3
        with:
          image: postgres:16
          options: -v ${{ github.workspace }}:/data -e PGPASSWORD=app
          run: pg_dump -h database -U app --data-only --exclude-table='(user|doctrine_migration_versions|messenger_messages*)' --inserts --on-conflict-do-nothing --file=/data/dump.sql

      - name: Deploy files over SSH
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlDzvc -i --delete --exclude-from=rsync-exclude.txt"
          SOURCE: "/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.FILES_SENDING_REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}

      - name: Execute remote ssh commands to finalise deployment
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.POST_DEPLOY_REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: ${{ secrets.DOCKER_COMPOSE_EXEC_COMMAND }} bin/post-deploy

      - name: Load dump in DB
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.POST_DEPLOY_REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: ${{ secrets.PSQL_COMMAND }} < ${{ secrets.REMOTE_TARGET }}/dump.sql
